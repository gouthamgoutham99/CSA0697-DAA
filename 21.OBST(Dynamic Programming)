#include <stdio.h>
#define MAX 100

int optCost(int freq[], int n) {
    int cost[MAX][MAX] = {0};

    for (int i = 0; i < n; i++) {
        cost[i][i] = freq[i];
    }

    for (int L = 2; L <= n; L++) {
        for (int i = 0; i <= n - L + 1; i++) {
            int j = i + L - 1;
            cost[i][j] = 10000;
            for (int r = i; r <= j; r++) {
                int c = (r > i ? cost[i][r - 1] : 0) + (r < j ? cost[r + 1][j] : 0) + sum(freq, i, j);
                if (c < cost[i][j]) {
                    cost[i][j] = c;
                }
            }
        }
    }
    return cost[0][n - 1];
}

int sum(int freq[], int i, int j) {
    int s = 0;
    for (int k = i; k <= j; k++) s += freq[k];
    return s;
}

int main() {
    int freq[] = {34, 8, 50};
    int n = sizeof(freq) / sizeof(freq[0]);
    printf("Cost of Optimal BST: %d\n", optCost(freq, n));
    return 0;
}
